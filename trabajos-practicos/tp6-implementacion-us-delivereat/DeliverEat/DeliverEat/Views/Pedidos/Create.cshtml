@model DeliverEat.Models.Pedido

@{
    ViewBag.Title = "Lo que sea";
}

<h2>Pedido</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Lo que sea</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Detalles del pedido", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Detalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Detalle, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.Label("Lugar de entrega", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p><a class="btn btn-default" href="/Domicilios/Create">+ Establecer nueva dirección</a></p>
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.Label("Lugar de recogida", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p><a class="btn btn-default" href="/Domicilios/Create">+ Establecer nueva dirección</a></p>
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.FechaDeEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaDeEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaDeEntrega, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.HoraDeEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoraDeEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoraDeEntrega, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.Label("Teléfono de contacto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.Label("Costo estimado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            @Html.Label("Datos de pago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p><a class="btn btn-default" href="/Pagos/Create">+ Añadir Pago</a></p>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
